// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: packet.proto

#include "packet.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_command_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_command_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Commands;
}  // namespace protobuf_command_2eproto
namespace protobuf_common_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Field;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Frame;
}  // namespace protobuf_common_2eproto
namespace protobuf_replacement_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_replacement_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Replacement;
}  // namespace protobuf_replacement_2eproto
namespace fira_message {
namespace sim_to_ref {
class PacketDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Packet>
      _instance;
} _Packet_default_instance_;
class EnvironmentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Environment>
      _instance;
} _Environment_default_instance_;
}  // namespace sim_to_ref
}  // namespace fira_message
namespace protobuf_packet_2eproto {
static void InitDefaultsPacket() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fira_message::sim_to_ref::_Packet_default_instance_;
    new (ptr) ::fira_message::sim_to_ref::Packet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fira_message::sim_to_ref::Packet::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Packet =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPacket}, {
      &protobuf_command_2eproto::scc_info_Commands.base,
      &protobuf_replacement_2eproto::scc_info_Replacement.base,}};

static void InitDefaultsEnvironment() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fira_message::sim_to_ref::_Environment_default_instance_;
    new (ptr) ::fira_message::sim_to_ref::Environment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fira_message::sim_to_ref::Environment::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Environment =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsEnvironment}, {
      &protobuf_common_2eproto::scc_info_Frame.base,
      &protobuf_common_2eproto::scc_info_Field.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Packet.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Environment.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fira_message::sim_to_ref::Packet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fira_message::sim_to_ref::Packet, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fira_message::sim_to_ref::Packet, replace_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fira_message::sim_to_ref::Environment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fira_message::sim_to_ref::Environment, step_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fira_message::sim_to_ref::Environment, frame_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fira_message::sim_to_ref::Environment, field_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::fira_message::sim_to_ref::Packet)},
  { 7, -1, sizeof(::fira_message::sim_to_ref::Environment)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::fira_message::sim_to_ref::_Packet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fira_message::sim_to_ref::_Environment_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "packet.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014packet.proto\022\027fira_message.sim_to_ref\032"
      "\rcommand.proto\032\021replacement.proto\032\014commo"
      "n.proto\"o\n\006Packet\022.\n\003cmd\030\001 \001(\0132!.fira_me"
      "ssage.sim_to_ref.Commands\0225\n\007replace\030\002 \001"
      "(\0132$.fira_message.sim_to_ref.Replacement"
      "\"c\n\013Environment\022\014\n\004step\030\001 \001(\r\022\"\n\005frame\030\002"
      " \001(\0132\023.fira_message.Frame\022\"\n\005field\030\003 \001(\013"
      "2\023.fira_message.Field2_\n\010Simulate\022S\n\010Sim"
      "ulate\022\037.fira_message.sim_to_ref.Packet\032$"
      ".fira_message.sim_to_ref.Environment\"\000b\006"
      "proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 406);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "packet.proto", &protobuf_RegisterTypes);
  ::protobuf_command_2eproto::AddDescriptors();
  ::protobuf_replacement_2eproto::AddDescriptors();
  ::protobuf_common_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_packet_2eproto
namespace fira_message {
namespace sim_to_ref {

// ===================================================================

void Packet::InitAsDefaultInstance() {
  ::fira_message::sim_to_ref::_Packet_default_instance_._instance.get_mutable()->cmd_ = const_cast< ::fira_message::sim_to_ref::Commands*>(
      ::fira_message::sim_to_ref::Commands::internal_default_instance());
  ::fira_message::sim_to_ref::_Packet_default_instance_._instance.get_mutable()->replace_ = const_cast< ::fira_message::sim_to_ref::Replacement*>(
      ::fira_message::sim_to_ref::Replacement::internal_default_instance());
}
void Packet::clear_cmd() {
  if (GetArenaNoVirtual() == NULL && cmd_ != NULL) {
    delete cmd_;
  }
  cmd_ = NULL;
}
void Packet::clear_replace() {
  if (GetArenaNoVirtual() == NULL && replace_ != NULL) {
    delete replace_;
  }
  replace_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Packet::kCmdFieldNumber;
const int Packet::kReplaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Packet::Packet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_packet_2eproto::scc_info_Packet.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:fira_message.sim_to_ref.Packet)
}
Packet::Packet(const Packet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_cmd()) {
    cmd_ = new ::fira_message::sim_to_ref::Commands(*from.cmd_);
  } else {
    cmd_ = NULL;
  }
  if (from.has_replace()) {
    replace_ = new ::fira_message::sim_to_ref::Replacement(*from.replace_);
  } else {
    replace_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:fira_message.sim_to_ref.Packet)
}

void Packet::SharedCtor() {
  ::memset(&cmd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&replace_) -
      reinterpret_cast<char*>(&cmd_)) + sizeof(replace_));
}

Packet::~Packet() {
  // @@protoc_insertion_point(destructor:fira_message.sim_to_ref.Packet)
  SharedDtor();
}

void Packet::SharedDtor() {
  if (this != internal_default_instance()) delete cmd_;
  if (this != internal_default_instance()) delete replace_;
}

void Packet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Packet::descriptor() {
  ::protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Packet& Packet::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_packet_2eproto::scc_info_Packet.base);
  return *internal_default_instance();
}


void Packet::Clear() {
// @@protoc_insertion_point(message_clear_start:fira_message.sim_to_ref.Packet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && cmd_ != NULL) {
    delete cmd_;
  }
  cmd_ = NULL;
  if (GetArenaNoVirtual() == NULL && replace_ != NULL) {
    delete replace_;
  }
  replace_ = NULL;
  _internal_metadata_.Clear();
}

bool Packet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fira_message.sim_to_ref.Packet)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .fira_message.sim_to_ref.Commands cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cmd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .fira_message.sim_to_ref.Replacement replace = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_replace()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fira_message.sim_to_ref.Packet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fira_message.sim_to_ref.Packet)
  return false;
#undef DO_
}

void Packet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fira_message.sim_to_ref.Packet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .fira_message.sim_to_ref.Commands cmd = 1;
  if (this->has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_cmd(), output);
  }

  // .fira_message.sim_to_ref.Replacement replace = 2;
  if (this->has_replace()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_replace(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:fira_message.sim_to_ref.Packet)
}

::google::protobuf::uint8* Packet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fira_message.sim_to_ref.Packet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .fira_message.sim_to_ref.Commands cmd = 1;
  if (this->has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_cmd(), deterministic, target);
  }

  // .fira_message.sim_to_ref.Replacement replace = 2;
  if (this->has_replace()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_replace(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fira_message.sim_to_ref.Packet)
  return target;
}

size_t Packet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fira_message.sim_to_ref.Packet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .fira_message.sim_to_ref.Commands cmd = 1;
  if (this->has_cmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cmd_);
  }

  // .fira_message.sim_to_ref.Replacement replace = 2;
  if (this->has_replace()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *replace_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Packet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fira_message.sim_to_ref.Packet)
  GOOGLE_DCHECK_NE(&from, this);
  const Packet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Packet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fira_message.sim_to_ref.Packet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fira_message.sim_to_ref.Packet)
    MergeFrom(*source);
  }
}

void Packet::MergeFrom(const Packet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fira_message.sim_to_ref.Packet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_cmd()) {
    mutable_cmd()->::fira_message::sim_to_ref::Commands::MergeFrom(from.cmd());
  }
  if (from.has_replace()) {
    mutable_replace()->::fira_message::sim_to_ref::Replacement::MergeFrom(from.replace());
  }
}

void Packet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fira_message.sim_to_ref.Packet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Packet::CopyFrom(const Packet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fira_message.sim_to_ref.Packet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Packet::IsInitialized() const {
  return true;
}

void Packet::Swap(Packet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Packet::InternalSwap(Packet* other) {
  using std::swap;
  swap(cmd_, other->cmd_);
  swap(replace_, other->replace_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Packet::GetMetadata() const {
  protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Environment::InitAsDefaultInstance() {
  ::fira_message::sim_to_ref::_Environment_default_instance_._instance.get_mutable()->frame_ = const_cast< ::fira_message::Frame*>(
      ::fira_message::Frame::internal_default_instance());
  ::fira_message::sim_to_ref::_Environment_default_instance_._instance.get_mutable()->field_ = const_cast< ::fira_message::Field*>(
      ::fira_message::Field::internal_default_instance());
}
void Environment::clear_frame() {
  if (GetArenaNoVirtual() == NULL && frame_ != NULL) {
    delete frame_;
  }
  frame_ = NULL;
}
void Environment::clear_field() {
  if (GetArenaNoVirtual() == NULL && field_ != NULL) {
    delete field_;
  }
  field_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Environment::kStepFieldNumber;
const int Environment::kFrameFieldNumber;
const int Environment::kFieldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Environment::Environment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_packet_2eproto::scc_info_Environment.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:fira_message.sim_to_ref.Environment)
}
Environment::Environment(const Environment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_frame()) {
    frame_ = new ::fira_message::Frame(*from.frame_);
  } else {
    frame_ = NULL;
  }
  if (from.has_field()) {
    field_ = new ::fira_message::Field(*from.field_);
  } else {
    field_ = NULL;
  }
  step_ = from.step_;
  // @@protoc_insertion_point(copy_constructor:fira_message.sim_to_ref.Environment)
}

void Environment::SharedCtor() {
  ::memset(&frame_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&step_) -
      reinterpret_cast<char*>(&frame_)) + sizeof(step_));
}

Environment::~Environment() {
  // @@protoc_insertion_point(destructor:fira_message.sim_to_ref.Environment)
  SharedDtor();
}

void Environment::SharedDtor() {
  if (this != internal_default_instance()) delete frame_;
  if (this != internal_default_instance()) delete field_;
}

void Environment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Environment::descriptor() {
  ::protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Environment& Environment::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_packet_2eproto::scc_info_Environment.base);
  return *internal_default_instance();
}


void Environment::Clear() {
// @@protoc_insertion_point(message_clear_start:fira_message.sim_to_ref.Environment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && frame_ != NULL) {
    delete frame_;
  }
  frame_ = NULL;
  if (GetArenaNoVirtual() == NULL && field_ != NULL) {
    delete field_;
  }
  field_ = NULL;
  step_ = 0u;
  _internal_metadata_.Clear();
}

bool Environment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fira_message.sim_to_ref.Environment)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 step = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &step_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .fira_message.Frame frame = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .fira_message.Field field = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fira_message.sim_to_ref.Environment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fira_message.sim_to_ref.Environment)
  return false;
#undef DO_
}

void Environment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fira_message.sim_to_ref.Environment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 step = 1;
  if (this->step() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->step(), output);
  }

  // .fira_message.Frame frame = 2;
  if (this->has_frame()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_frame(), output);
  }

  // .fira_message.Field field = 3;
  if (this->has_field()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_field(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:fira_message.sim_to_ref.Environment)
}

::google::protobuf::uint8* Environment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fira_message.sim_to_ref.Environment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 step = 1;
  if (this->step() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->step(), target);
  }

  // .fira_message.Frame frame = 2;
  if (this->has_frame()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_frame(), deterministic, target);
  }

  // .fira_message.Field field = 3;
  if (this->has_field()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_field(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fira_message.sim_to_ref.Environment)
  return target;
}

size_t Environment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fira_message.sim_to_ref.Environment)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .fira_message.Frame frame = 2;
  if (this->has_frame()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *frame_);
  }

  // .fira_message.Field field = 3;
  if (this->has_field()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *field_);
  }

  // uint32 step = 1;
  if (this->step() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->step());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Environment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fira_message.sim_to_ref.Environment)
  GOOGLE_DCHECK_NE(&from, this);
  const Environment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Environment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fira_message.sim_to_ref.Environment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fira_message.sim_to_ref.Environment)
    MergeFrom(*source);
  }
}

void Environment::MergeFrom(const Environment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fira_message.sim_to_ref.Environment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_frame()) {
    mutable_frame()->::fira_message::Frame::MergeFrom(from.frame());
  }
  if (from.has_field()) {
    mutable_field()->::fira_message::Field::MergeFrom(from.field());
  }
  if (from.step() != 0) {
    set_step(from.step());
  }
}

void Environment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fira_message.sim_to_ref.Environment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Environment::CopyFrom(const Environment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fira_message.sim_to_ref.Environment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Environment::IsInitialized() const {
  return true;
}

void Environment::Swap(Environment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Environment::InternalSwap(Environment* other) {
  using std::swap;
  swap(frame_, other->frame_);
  swap(field_, other->field_);
  swap(step_, other->step_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Environment::GetMetadata() const {
  protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace sim_to_ref
}  // namespace fira_message
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::fira_message::sim_to_ref::Packet* Arena::CreateMaybeMessage< ::fira_message::sim_to_ref::Packet >(Arena* arena) {
  return Arena::CreateInternal< ::fira_message::sim_to_ref::Packet >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::fira_message::sim_to_ref::Environment* Arena::CreateMaybeMessage< ::fira_message::sim_to_ref::Environment >(Arena* arena) {
  return Arena::CreateInternal< ::fira_message::sim_to_ref::Environment >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
